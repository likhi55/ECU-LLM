name: Close SCR Issue on Green (after PR merge)

on:
  workflow_run:
    workflows: ["Build & Test"]
    types: [completed]
    branches: [main]

jobs:
  close-on-green:
    if: >
      ${{
        github.event.workflow_run.conclusion == 'success' &&
        contains(github.event.workflow_run.head_commit.message, 'Merge pull request')
      }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Extract SCR ID from merge commit
        id: scr
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const sha = context.payload.workflow_run.head_sha;
            const commit = await github.rest.repos.getCommit({owner, repo, ref: sha});
            const msg = commit.data.commit.message || '';
            // Look for SCR000123 anywhere in the merge message
            const m = msg.match(/SCR0*([0-9]{1,6})/i);
            core.setOutput('scr', m ? `SCR${m[1].padStart(6,'0')}` : '');
      - name: Close matching open issue
        if: ${{ steps.scr.outputs.scr != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const scr = core.getInput('scr') || '${{ steps.scr.outputs.scr }}';
            const q = `repo:${owner}/${repo} is:issue is:open in:title ${scr}`;
            const res = await github.rest.search.issuesAndPullRequests({ q });
            if (!res.data.items.length) {
              core.info(`No open issue for ${scr}`);
              return;
            }
            const issue = res.data.items[0];
            await github.rest.issues.update({owner, repo, issue_number: issue.number, state: 'closed'});
            await github.rest.issues.addLabels({owner, repo, issue_number: issue.number, labels: ['state: closed']});
