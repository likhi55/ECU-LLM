name: Close SCR Issue on Green (after PR merge)

on:
  pull_request:
    types: [closed]

jobs:
  close-on-green:
    if: ${{ github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: read
      issues: write
      actions: read

    steps:
      - name: Resolve SCR ID from PR
        id: scr
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const text = `${pr.title}\n\n${pr.body || ''}`;
            const m = text.match(/SCR0*([0-9]{1,6})/i);
            core.setOutput('scr', m ? `SCR${m[1].padStart(6,'0')}` : '');

      - name: Wait for Build & Test on merge SHA to succeed
        id: gate
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const mergeSha = context.payload.pull_request.merge_commit_sha;
            const workflowName = "Build & Test";

            // Find workflow id by name
            const wfs = await github.rest.actions.listRepoWorkflows({owner, repo});
            const wf = wfs.data.workflows.find(w => w.name === workflowName);
            if (!wf) { core.setFailed(`Workflow '${workflowName}' not found`); return; }

            // Poll for the specific run on the merge SHA (branch main)
            const deadline = Date.now() + 25 * 60 * 1000;
            let state = 'queued', conclusion = null;
            while (Date.now() < deadline) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner, repo, workflow_id: wf.id,
                head_sha: mergeSha, branch: "main", per_page: 1
              });
              const run = runs.data.workflow_runs[0];
              if (run) { state = run.status; conclusion = run.conclusion; }
              if (state === 'completed') break;
              await new Promise(r => setTimeout(r, 15000));
            }
            core.setOutput('conclusion', conclusion || 'none');

      - name: Stop if CI not green
        if: ${{ steps.gate.outputs.conclusion != 'success' }}
        run: |
          echo "Build & Test is not green for the merge commit (conclusion=${{ steps.gate.outputs.conclusion }})"
          exit 0

      - name: Close matching open issue
        if: ${{ steps.scr.outputs.scr != '' }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const scr = '${{ steps.scr.outputs.scr }}';
            const q = `repo:${owner}/${repo} is:issue is:open in:title ${scr}`;
            const res = await github.rest.search.issuesAndPullRequests({ q });
            if (!res.data.items.length) { core.info(`No open issue for ${scr}`); return; }
            const issue = res.data.items[0];
            await github.rest.issues.update({owner, repo, issue_number: issue.number, state: 'closed'});
            await github.rest.issues.addLabels({owner, repo, issue_number: issue.number, labels: ['state: closed']});
